[versions]
springBoot = "3.5.3"
springDependencyManagement = "1.1.7"
hibernateOrm = "6.6.18.Final"
graalvmNative = "0.10.6"
springAi = "1.0.0"
postgresql = "42.7.2"

[libraries]
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-starter-batch = { module = "org.springframework.boot:spring-boot-starter-batch" }
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools" }
spring-boot-docker-compose = { module = "org.springframework.boot:spring-boot-docker-compose" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-batch-test = { module = "org.springframework.batch:spring-batch-test" }
spring-ai-starter-model-ollama = { module = "org.springframework.ai:spring-ai-starter-model-ollama" }
spring-ai-spring-boot-docker-compose = { module = "org.springframework.ai:spring-ai-spring-boot-docker-compose" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "springBoot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "springDependencyManagement" }
hibernate-orm = { id = "org.hibernate.orm", version.ref = "hibernateOrm" }
graalvm-native = { id = "org.graalvm.buildtools.native", version.ref = "graalvmNative" }